<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Peapod Admin Panel</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #F5F0E8 0%, #EDE5D8 50%, #E6DCC9 100%);
      min-height: 100vh;
      padding: 20px;
    }

    .header {
      text-align: center;
      margin-bottom: 30px;
    }

    .header h1 {
      font-size: 2.5rem;
      background: linear-gradient(135deg, #6B8E23, #8FBC8F);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 10px;
      font-weight: 700;
    }

    .header p {
      color: #666;
      font-size: 1.1rem;
    }

    .nav-bar {
      background: rgba(255, 255, 255, 0.9);
      padding: 15px;
      border-radius: 15px;
      margin-bottom: 30px;
      display: flex;
      gap: 15px;
      justify-content: center;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .nav-btn {
      background: linear-gradient(135deg, #6B8E23, #8FBC8F);
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 25px;
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .nav-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(107, 142, 35, 0.3);
    }

    .admin-container {
      max-width: 1200px;
      margin: 0 auto;
    }

    .stats-overview {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }

    .stat-card {
      background: rgba(255, 255, 255, 0.9);
      padding: 20px;
      border-radius: 15px;
      text-align: center;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .stat-number {
      font-size: 2rem;
      font-weight: 700;
      color: #6B8E23;
    }

    .stat-label {
      color: #666;
      font-size: 0.9rem;
      margin-top: 5px;
    }

    .lender-management {
      background: rgba(255, 255, 255, 0.9);
      border-radius: 20px;
      padding: 30px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }

    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
    }

    .section-title {
      font-size: 1.8rem;
      color: #333;
      font-weight: 700;
    }

    .bulk-actions {
      display: flex;
      gap: 10px;
    }

    .bulk-btn {
      background: #6B8E23;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 20px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .bulk-btn:hover {
      background: #556B1D;
    }

    .lender-grid {
      display: grid;
      gap: 15px;
    }

    .lender-row {
      background: #f8f9fa;
      border-radius: 12px;
      padding: 20px;
      border: 2px solid transparent;
      transition: all 0.3s ease;
    }

    .lender-row.active {
      border-color: #28a745;
      background: linear-gradient(135deg, #d4edda, #c3e6cb);
    }

    .lender-row.inactive {
      border-color: #dc3545;
      background: linear-gradient(135deg, #f8d7da, #f1b0b7);
      opacity: 0.7;
    }

    .lender-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
    }

    .lender-name {
      font-size: 1.2rem;
      font-weight: 700;
      color: #333;
    }

    .lender-status {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .status-indicator {
      width: 12px;
      height: 12px;
      border-radius: 50%;
    }

    .status-indicator.active {
      background: #28a745;
    }

    .status-indicator.inactive {
      background: #dc3545;
    }

    .toggle-switch {
      position: relative;
      width: 60px;
      height: 30px;
      background: #ccc;
      border-radius: 15px;
      cursor: pointer;
      transition: background 0.3s ease;
    }

    .toggle-switch.active {
      background: #28a745;
    }

    .toggle-slider {
      position: absolute;
      top: 3px;
      left: 3px;
      width: 24px;
      height: 24px;
      background: white;
      border-radius: 50%;
      transition: transform 0.3s ease;
    }

    .toggle-switch.active .toggle-slider {
      transform: translateX(30px);
    }

    .contact-info {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      gap: 15px;
      margin-top: 15px;
    }

    .contact-field {
      display: flex;
      flex-direction: column;
    }

    .contact-label {
      font-size: 0.85rem;
      color: #666;
      margin-bottom: 5px;
      font-weight: 600;
    }

    .contact-input {
      padding: 8px 12px;
      border: 1px solid #ddd;
      border-radius: 6px;
      font-size: 0.9rem;
      transition: all 0.3s ease;
    }

    .contact-input:focus {
      outline: none;
      border-color: #6B8E23;
      box-shadow: 0 0 0 2px rgba(107, 142, 35, 0.1);
    }

    .contact-input.saved {
      border-color: #28a745;
      background: #f8fff9;
    }

    .save-btn {
      background: #28a745;
      color: white;
      border: none;
      padding: 6px 12px;
      border-radius: 4px;
      font-size: 0.8rem;
      cursor: pointer;
      margin-top: 10px;
      opacity: 0;
      transition: all 0.3s ease;
    }

    .save-btn.show {
      opacity: 1;
    }

    .save-btn:hover {
      background: #218838;
    }

    .lender-criteria {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 10px;
      margin-top: 15px;
      padding-top: 15px;
      border-top: 1px solid rgba(0, 0, 0, 0.1);
    }

    .criteria-item {
      font-size: 0.8rem;
      color: #666;
    }

    .criteria-label {
      font-weight: 600;
    }

    @media (max-width: 768px) {
      .contact-info {
        grid-template-columns: 1fr;
      }
      
      .lender-criteria {
        grid-template-columns: 1fr 1fr;
      }
      
      .nav-bar {
        flex-direction: column;
        align-items: center;
      }
    }

    .success-message {
      background: #d4edda;
      color: #155724;
      padding: 10px 15px;
      border-radius: 6px;
      margin-bottom: 20px;
      border: 1px solid #c3e6cb;
      display: none;
    }

    .export-section {
      margin-top: 30px;
      padding: 20px;
      background: rgba(255, 255, 255, 0.5);
      border-radius: 15px;
      text-align: center;
    }

    .export-btn {
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 25px;
      font-weight: 600;
      cursor: pointer;
      margin: 0 10px;
      transition: all 0.3s ease;
    }

    .export-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    }
  </style>
</head>
<body>
  <div class="header">
    <h1>Peapod Admin Panel</h1>
    <p>Manage lenders and system settings</p>
  </div>

  <nav class="nav-bar">
    <a href="index.html" class="nav-btn">ðŸ  Login</a>
    <a href="calculator.html" class="nav-btn">ðŸ§® Calculator</a>
    <a href="admin.html" class="nav-btn">âš™ï¸ Admin Panel</a>
  </nav>

  <div class="admin-container">
    <div id="successMessage" class="success-message">
      Settings saved successfully!
    </div>

    <div class="stats-overview">
      <div class="stat-card">
        <div class="stat-number" id="activeLendersCount">0</div>
        <div class="stat-label">Active Lenders</div>
      </div>
      <div class="stat-card">
        <div class="stat-number" id="totalLendersCount">0</div>
        <div class="stat-label">Total Lenders</div>
      </div>
      <div class="stat-card">
        <div class="stat-number" id="completedContactsCount">0</div>
        <div class="stat-label">Contacts Added</div>
      </div>
    </div>

    <div class="lender-management">
      <div class="section-header">
        <h2 class="section-title">Lender Management</h2>
        <div class="bulk-actions">
          <button class="bulk-btn" onclick="toggleAllLenders(true)">âœ… Activate All</button>
          <button class="bulk-btn" onclick="toggleAllLenders(false)">âŒ Deactivate All</button>
          <button class="bulk-btn" onclick="saveAllChanges()">ðŸ’¾ Save Changes</button>
        </div>
      </div>

      <div id="lenderGrid" class="lender-grid">
        <!-- Lenders will be populated here -->
      </div>
    </div>

    <div class="export-section">
      <h3>Export Data</h3>
      <p>Download your lender configuration and contact information</p>
      <button class="export-btn" onclick="exportData('active')">ðŸ“Š Export Active Lenders</button>
      <button class="export-btn" onclick="exportData('all')">ðŸ“‹ Export All Lenders</button>
    </div>
  </div>

  <script>
    // Enhanced lender data with active status and contact info
    let lenders = [
      { name: "One Team(1st)", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 650, monthlyRevenue: 25000, deposits: 2, nsfs: 2, avgBalance: 1000, monthsBusiness: 12 }, restrictedIndustries: ["Law Firms", "Pawn Shops", "Finance/Investment/Banks", "Non-Profit", "Real Estate", "Money Services Businesses", "Marijuana/CBD", "Trucking", "Transportation", "Bail-Bonds"] },
      { name: "PEAC Solutions(1st)", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 675, monthlyRevenue: 42000, deposits: 5, nsfs: 3, avgBalance: 4200, monthsBusiness: 36 }, restrictedIndustries: ["Auto Sales", "Cleaning and Maintenance", "Construction", "Farming", "Finance/Investment/Banks", "Hotels & Lodging Memberships", "Law Firms", "Mining & Quarries", "Non-Profit", "Trucking", "Transportation", "Casino/ Gambling", "Adult Entertainment"] },
      { name: "IDEA Financial", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 625, monthlyRevenue: 15000, deposits: 6, nsfs: 3, avgBalance: 4000, monthsBusiness: 24 }, restrictedIndustries: ["Farming", "Auto Sales", "Auto Rentals", "Oil & Gas", "Finance/Investment/Banks", "Bail-Bonds", "Finance", "Property Management", "Real Estate", "Education", "Marijuana/CBD", "Multi-Level Marketing Sales", "Brokers", "Mining & Quarries", "Government Services", "Gold Dealers", "Gun Sales", "Trucking", "Transportation", "Truck Leasing"] },
      { name: "Kapitus(1st)", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 625, monthlyRevenue: 10000, deposits: 5, nsfs: 3, avgBalance: 600, monthsBusiness: 12 }, restrictedIndustries: ["Adult Entertainment", "Auto Sales", "Marijuana/CBD", "Cell Phone Stores", "Colleges/Universities", "Credit Repair", "Finance/Investment/Banks", "Government Services", "Insurance", "Boat Sales", "Non-Profit", "Auto Rentals", "Casino/ Gambling"] },
      { name: "OnDeck(1st)", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 625, monthlyRevenue: 15000, deposits: 5, nsfs: 3, avgBalance: 1000, monthsBusiness: 24 }, restrictedIndustries: ["Adult Entertainment", "Art Dealer", "Auto Sales", "Bail-Bonds", "Birth Tourism", "Boat Sales", "Brokers", "Marijuana/CBD", "Casino/ Gambling", "Cell Phone Stores", "Gold Dealers", "Gun Sales", "Horoscope/ Fortune Telling", "Money Services Businesses", "Multi-Level Marketing Sales", "Non-Profit", "Outdoor Power Equipment Stores", "Pawn Shops", "Private Households", "Religious/Civic Organizations", "RV Dealer"] },
      { name: "Headway Capital", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 600, monthlyRevenue: 5000, deposits: 1, nsfs: 3, avgBalance: 500, monthsBusiness: 6 }, restrictedIndustries: ["Adult Entertainment", "Art Dealer", "Auto Sales", "Bail-Bonds", "Birth Tourism", "Boat Sales", "Brokers",  "Marijuana/CBD", "Casino/ Gambling", "Cell Phone Stores", "Gold Dealers", "Gun Sales", "Horoscope/ Fortune Telling", "Money Services Businesses", "Multi-Level Marketing Sales", "Non-Profit", "Outdoor Power Equipment Stores", "Pawn Shops", "Private Households", "Religious/Civic Organizations", "RV Dealer"] },
      { name: "Credibly", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 550, monthlyRevenue: 20000, deposits: 4, nsfs: 7, avgBalance: 1000, monthsBusiness: 6 }, restrictedIndustries: ["Auto Sales", "Adult Entertainment", "Bail-Bonds", "Brokers", "Casino/ Gambling", "Credit Repair", "Dating Services", "Dickey's BBQ Franchises", "Government Agencies", "Gun Sales", "Law Firms", "Marijuana/CBD", "Multi-Level Marketing Sales", "Non-Profit", "Oil & Gas", "Religious/Civic Organizations", "Vape Shop", "Warrenty Services", "Trucking", "Transportation"] },
      { name: "Mulligan(1st)", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 625, monthlyRevenue: 25000, deposits: 4, nsfs: 3, avgBalance: 3000, monthsBusiness: 6 }, restrictedIndustries: ["Adult Entertainment", "Art Dealer", "Auto Sales", "Bail-Bonds", "Birth Tourism", "Boat Sales", "Brokers",  "Marijuana/CBD", "Casino/ Gambling", "Cell Phone Stores", "Gold Dealers", "Gun Sales", "Horoscope/ Fortune Telling", "Money Services Businesses", "Multi-Level Marketing Sales", "Non-Profit", "Outdoor Power Equipment Stores", "Pawn Shops", "Private Households", "Religious/Civic Organizations", "RV Dealer", "Finance/Investment/Banks", "Food Trucks", "Law Firms", "Non-Profit", "Real Estate", "Trucking", "Transportation", "Vending", "Vape Shop", "Insurance", "Restaurant"] },
      { name: "Rapid Finance(1st)", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 600, monthlyRevenue: 10000, deposits: 3, nsfs: 5, avgBalance: 1000, monthsBusiness: 24 }, restrictedIndustries: ["Adult Entertainment", "Auto Sales", "Bail-Bonds", "Casino/ Gambling", "Collections", "Finance/Investment/Banks", "Gun Sales", "Influencers", "Law Firms", "Marijuana/CBD", "Multi-Level Marketing Sales", "Nightclub", "Non-Profit", "Real Estate", "Religious/Civic Organizations", "Trucking", "Transportation", "Vape Shop", "Property Management"] },
      { name: "Expansion", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 550, monthlyRevenue: 6000, deposits: 2, nsfs: 6, avgBalance: 550, monthsBusiness: 6 }, restrictedIndustries: ["Adult Entertainment", "Auto Sales","Bail-Bonds", "Boat Sales", "Business Associations/Unions", "Call Centers", "Card Processors", "Casino/ Gambling", "Collections", "Finance/Investment/Banks", "Government Agencies", "Law Firms", "Lead Generators", "Lease-to-own Businesses", "Marijuana/CBD", "Mining & Quarries", "Multi-Level Marketing Sales", "Non-Profit", "Pawn Shops", "PREC.METALS", "Religious/Civic Organizations", "Brokers", "Travel Agencies"] },
      { name: "Kalamata(ASK BEN)", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 600, monthlyRevenue: 18000, deposits: 4, nsfs: 3, avgBalance: 750, monthsBusiness: 12 }, restrictedIndustries: ["Adult Entertainment", "Education", "Auto Sales", "Farming", "Gas & Oil", "Gun Sales", "Law Firms", "Marijuana/CBD", "Non-Profit", "Pawn Shops", "PREC.METALS", "Real Estate", "Retail", "Religious/Civic Organizations", "Trucking", "Transportation", "Towing"] },
      { name: "Fundation MCA", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 600, monthlyRevenue: 20000, deposits: 2, nsfs: 2, avgBalance: 1000, monthsBusiness: 6 }, restrictedIndustries: ["Law Firms", "Pawn Shops", "Non-Profit", "Real Estate", "Money Services Businesses", "Marijuana/CBD", "Trucking", "Transportation", "Bail-Bonds", "Finance/Investment/Banks"] },
      { name: "Greenwich Capital", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 600, monthlyRevenue: 50000, deposits: 3, nsfs: 3, avgBalance: 1000, monthsBusiness: 24 }, restrictedIndustries: ["Accounting", "Auto Rentals", "Auto Sales", "Bail-Bonds", "Brokers", "Cell Phone Stores", "Finance/Investment/Banks", "Food Trucks", "Law Firms", "Non-Profit", "Real Estate", "Trucking", "Transportation", "Vending"] },
      { name: "CFG", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 500, monthlyRevenue: 15000, deposits: 3, nsfs: 4, avgBalance: 1000, monthsBusiness: 6 }, restrictedIndustries: ["Auto Sales", "Bail-Bonds", "Collections", "Non-Profit", "Religious/Civic Organizations", "Travel Agencies", "Wholesale", "Brokers"] },
      { name: "Edge", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 500, monthlyRevenue: 6000, deposits: 2, nsfs: 5, avgBalance: 600, monthsBusiness: 6 }, restrictedIndustries: ["Adult Entertainment", "Auto Sales", "Auto Rentals", "Casino/ Gambling", "Trucking", "Transportation", "Brokers"] },
      { name: "GFE", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 500, monthlyRevenue: 30000, deposits: 3, nsfs: 3, avgBalance: 1000, monthsBusiness: 12 }, restrictedIndustries: [] },
      { name: "Legend", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 650, monthlyRevenue: 30000, deposits: 3, nsfs: 3, avgBalance: 1000, monthsBusiness: 36 }, restrictedIndustries: ["Adult Entertainment", "Auto Sales", "Education", "Farming","Oil & Gas", "Gun Sales", "Law Firms", "Marijuana/CBD", "Non-Profit", "Pawn Shops", "Real Estate", "Brokers", "Religious/Civic Organizations", "Trucking", "Transportation"] },
      { name: "Bitty", active: false, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 450, monthlyRevenue: 1000, deposits: 1, nsfs: 10, avgBalance: 100, monthsBusiness: 1 }, restrictedIndustries: ["Auto Sales"] },
      { name: "Good Funding", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 600, monthlyRevenue: 5000, deposits: 4, nsfs: 3, avgBalance: 1200, monthsBusiness: 18 }, restrictedIndustries: [] },
      { name: "Cashflo It", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 500, monthlyRevenue: 35000, deposits: 5, nsfs: 2, avgBalance: 600, monthsBusiness: 12 }, restrictedIndustries: ["Adult Entertainment", "Auto Sales", "Casino/ Gambling", "Collections", "Construction", "Contractors", "Roofing", "Electrician", "Landscaping", "Farming", "Finance/Investment/Banks", "Gas Stations", "Insurance", "Law Firms", "Marijuana/CBD", "Real Estate", "Brokers", "Title Companies", "Trucking", "Transportation"] },
      { name: "Capital Assist", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 500, monthlyRevenue: 75000, deposits: 3, nsfs: 6, avgBalance: 1000, monthsBusiness: 6 }, restrictedIndustries: ["Adult Entertainment", "Auto Sales", "Casino/ Gambling", "Collections", "Construction", "Contractors", "Farming", "Finance/Investment/Banks", "Gas Stations", "Insurance", "Law Firms", "Marijuana/CBD", "Real Estate", "Brokers", "Title Companies", "Trucking", "Transportation"] },
      { name: "GreenBOX (Canada / Auto Sales ONLY)", active: false, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 500, monthlyRevenue: 10000, deposits: 2, nsfs: 7, avgBalance: 150, monthsBusiness: 5 }, restrictedIndustries: ["Bail-Bonds", "Collections", "Credit Repair", "Finance/Investment/Banks", "Marijuana/CBD", "Religious/Civic Organizations", "Trucking", "Transportation", "Real Estate", "Brokers"] },
      { name: "Last Chance Funding", active: true, contact: { email: "", phone: "", person: "" }, criteria: { personalCredit: 450, monthlyRevenue: 1000, deposits: 1, nsfs: 10, avgBalance: 500, monthsBusiness: 1 }, restrictedIndustries: ["Finance/Investment/Banks", "Medical/Healthcare"] },
    ];

    // Load saved data from memory (in a real app, this would be from a database)
    let savedData = {};

    function toggleAllLenders(active) {
      lenders.forEach(lender => {
        lender.active = active;
      });
      updateStats();
      renderLenders();
      showSuccessMessage();
    }

    function saveAllChanges() {
      // In a real app, this would save to a database
      // For now, we'll simulate saving and show success
      showSuccessMessage();
    }

    function showSuccessMessage() {
      const message = document.getElementById('successMessage');
      message.style.display = 'block';
      setTimeout(() => {
        message.style.display = 'none';
      }, 3000);
    }

    function exportData(type) {
      const dataToExport = type === 'active' ? 
        lenders.filter(l => l.active) : 
        lenders;
      
      const exportData = {
        exportDate: new Date().toISOString(),
        exportType: type,
        lenderCount: dataToExport.length,
        lenders: dataToExport.map(lender => ({
          name: lender.name,
          active: lender.active,
          contact: lender.contact,
          criteria: lender.criteria,
          restrictedIndustries: lender.restrictedIndustries
        }))
      };
      
      const dataStr = JSON.stringify(exportData, null, 2);
      const dataBlob = new Blob([dataStr], {type: 'application/json'});
      
      const link = document.createElement('a');
      link.href = URL.createObjectURL(dataBlob);
      link.download = `peapod-lenders-${type}-${new Date().toISOString().split('T')[0]}.json`;
      link.click();
      
      showSuccessMessage();
    }

    // Initialize the page
    document.addEventListener('DOMContentLoaded', function() {
      loadLenderData();
    });

    // Auto-save functionality (saves changes as user types)
    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }

    // Export lender data to be used by calculator
    function exportToCalculator() {
      const activeLenders = lenders.filter(l => l.active);
      return activeLenders;
    }

    // Function to share lender data with calculator page
    function getLendersForCalculator() {
      return lenders.filter(l => l.active);
    }
  </script>
</body>
</html> loadLenderData() {
      // In a real app, you would load from localStorage or a database
      // For now, we'll use the memory-based approach
      updateStats();
      renderLenders();
    }

    function updateStats() {
      const activeLenders = lenders.filter(l => l.active).length;
      const totalLenders = lenders.length;
      const completedContacts = lenders.filter(l => 
        l.contact.email || l.contact.phone || l.contact.person
      ).length;

      document.getElementById('activeLendersCount').textContent = activeLenders;
      document.getElementById('totalLendersCount').textContent = totalLenders;
      document.getElementById('completedContactsCount').textContent = completedContacts;
    }

    function renderLenders() {
      const grid = document.getElementById('lenderGrid');
      grid.innerHTML = '';

      lenders.forEach((lender, index) => {
        const lenderElement = createLenderElement(lender, index);
        grid.appendChild(lenderElement);
      });
    }

    function createLenderElement(lender, index) {
      const div = document.createElement('div');
      div.className = `lender-row ${lender.active ? 'active' : 'inactive'}`;
      
      div.innerHTML = `
        <div class="lender-header">
          <div class="lender-name">${lender.name}</div>
          <div class="lender-status">
            <span class="status-indicator ${lender.active ? 'active' : 'inactive'}"></span>
            <span>${lender.active ? 'Active' : 'Inactive'}</span>
            <div class="toggle-switch ${lender.active ? 'active' : ''}" onclick="toggleLender(${index})">
              <div class="toggle-slider"></div>
            </div>
          </div>
        </div>
        
        <div class="contact-info">
          <div class="contact-field">
            <label class="contact-label">Contact Person</label>
            <input type="text" class="contact-input" placeholder="Enter name" 
                   value="${lender.contact.person}" 
                   onchange="updateContact(${index}, 'person', this.value)"
                   onblur="this.classList.add('saved')">
          </div>
          <div class="contact-field">
            <label class="contact-label">Email</label>
            <input type="email" class="contact-input" placeholder="Enter email" 
                   value="${lender.contact.email}" 
                   onchange="updateContact(${index}, 'email', this.value)"
                   onblur="this.classList.add('saved')">
          </div>
          <div class="contact-field">
            <label class="contact-label">Phone</label>
            <input type="tel" class="contact-input" placeholder="Enter phone" 
                   value="${lender.contact.phone}" 
                   onchange="updateContact(${index}, 'phone', this.value)"
                   onblur="this.classList.add('saved')">
          </div>
        </div>
        
        <div class="lender-criteria">
          <div class="criteria-item">
            <span class="criteria-label">Min Credit:</span> ${lender.criteria.personalCredit}
          </div>
          <div class="criteria-item">
            <span class="criteria-label">Min Revenue:</span> $${lender.criteria.monthlyRevenue.toLocaleString()}
          </div>
          <div class="criteria-item">
            <span class="criteria-label">Min Deposits:</span> ${lender.criteria.deposits}
          </div>
          <div class="criteria-item">
            <span class="criteria-label">Max NSFs:</span> ${lender.criteria.nsfs}
          </div>
          <div class="criteria-item">
            <span class="criteria-label">Min Balance:</span> $${lender.criteria.avgBalance.toLocaleString()}
          </div>
          <div class="criteria-item">
            <span class="criteria-label">Min Months:</span> ${lender.criteria.monthsBusiness}
          </div>
        </div>
      `;
      
      return div;
    }

    function toggleLender(index) {
      lenders[index].active = !lenders[index].active;
      updateStats();
      renderLenders();
      showSuccessMessage();
    }

    function updateContact(index, field, value) {
      lenders[index].contact[field] = value;
      updateStats();
      showSuccessMessage();
    }

    function
